{"version":3,"file":"static/js/984.dd98c18a.chunk.js","mappings":"gLAKA,MAAMA,EAAoB,CACxB,CAAEC,GAAI,EAAGC,KAAM,YACf,CAAED,GAAI,EAAGC,KAAM,cACf,CAAED,GAAI,EAAGC,KAAM,iBACf,CAAED,GAAI,EAAGC,KAAM,iBACf,CAAED,GAAI,EAAGC,KAAM,sBACf,CAAED,GAAI,EAAGC,KAAM,iBACf,CAAED,GAAI,EAAGC,KAAM,oBACf,CAAED,GAAI,EAAGC,KAAM,eACf,CAAED,GAAI,EAAGC,KAAM,sBACf,CAAED,GAAI,GAAIC,KAAM,oBAChB,CAAED,GAAI,GAAIC,KAAM,iBAChB,CAAED,GAAI,GAAIC,KAAM,gBAChB,CAAED,GAAI,GAAIC,KAAM,qBAChB,CAAED,GAAI,GAAIC,KAAM,UA+gBlB,EA5gB8BC,KAAO,IAADC,EAClC,MAAOC,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,IAC1BC,EAAUC,IAAeF,EAAAA,EAAAA,UAAS,CAEvCL,KAAM,GACNQ,MAAO,GACPC,MAAO,GACPC,SAAU,GACVC,gBAAiB,GACjBC,SAAU,GAGVC,aAAc,GACdC,gBAAiB,GACjBC,kBAAmB,GACnBC,YAAa,GACbC,QAAS,GACTC,KAAM,GAGNC,eAAgB,KAChBC,aAAc,MAGTC,EAAOC,IAAYjB,EAAAA,EAAAA,UAAS,KAC5BkB,EAAcC,IAAmBnB,EAAAA,EAAAA,WAAS,GAC3CoB,GAAWC,EAAAA,EAAAA,OACX,SAAEC,EAAQ,wBAAEC,EAAuB,KAAEC,EAAI,QAAEC,IAAYC,EAAAA,EAAAA,YAAWC,EAAAA,IAElEC,EAAqBC,IACzB,IACE,MAAMC,EAAOD,EAAEE,OAAOC,MAAM,GAC5B,IAAKF,EAAM,OAMX,GAHAb,EAAS,KAGJa,EAAKG,KAAKC,MAAM,WAEnB,YADAjB,EAAS,sDAKX,GAAIa,EAAKK,KAAO,QAEd,YADAlB,EAAS,sCAIX,MAAMmB,EAAS,IAAIC,WAGbC,EAAiBpC,EAEvBkC,EAAOG,OAAUC,IACf,IACEF,GAAeG,IAAI,IACdA,EACH3B,eAAgBgB,EAChBf,aAAcyB,EAAMT,OAAOW,UAE/B,CAAE,MAAOC,GACPC,QAAQ5B,MAAM,4BAA6B2B,GAC3C1B,EAAS,8BACX,GAGFmB,EAAOS,QAAU,KACf5B,EAAS,gCAAgC,EAG3CmB,EAAOU,cAAchB,EACvB,CAAE,MAAOa,GACPC,QAAQ5B,MAAM,8BAA+B2B,GAC7C1B,EAAS,+CACX,GAGI8B,EAAgBlB,IACpB,MAAM,KAAElC,EAAI,MAAEqD,EAAK,KAAEf,EAAI,MAAED,GAAUH,EAAEE,OAE1B,SAATE,EAKJ/B,GAAYuC,IAAI,IACXA,EACH,CAAC9C,GAAOqD,MANRpB,EAAkBC,EAOjB,EAGCoB,EAAeA,IACN,IAATnD,EAEGG,EAASN,KAAKuD,OAIdjD,EAASE,MAAM+C,OAGR,eAAeC,KAAKlD,EAASE,OAIpCF,EAASG,MAAM8C,OAIfjD,EAASI,SAIVJ,EAASI,SAAS+C,OAAS,GAC7BnC,EAAS,gDACF,GAELhB,EAASI,WAAaJ,EAASK,kBACjCW,EAAS,2BACF,IATPA,EAAS,yBACF,IALPA,EAAS,6BACF,IALPA,EAAS,uCACF,IAJPA,EAAS,sBACF,IALPA,EAAS,0BACF,GA2BS,IAATnB,EAEJG,EAASO,aAAa0C,OAItBjD,EAASQ,gBAITR,EAASW,QAAQsC,OAIjBjD,EAASY,KAAKqC,SAIdjD,EAASa,iBACZG,EAAS,oCACF,IALPA,EAAS,qBACF,IALPA,EAAS,iCACF,IALPA,EAAS,qCACF,IALPA,EAAS,8BACF,IAoBXA,EAAS,KACF,GAGHoC,EAAWA,KACXJ,MACFlD,EAAQD,EAAO,GACfmB,EAAS,IACTqC,OAAOC,SAAS,CAAEC,IAAK,EAAGC,SAAU,WACtC,EAGIC,EAAWA,KACf3D,EAAQD,EAAO,GACfmB,EAAS,IACTqC,OAAOC,SAAS,CAAEC,IAAK,EAAGC,SAAU,UAAW,EAqFjD,OACEE,EAAAA,EAAAA,KAAA,OAAKC,UAAU,0BAAyBC,UACtCC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,mBAAkBC,SAAA,EAC/BC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,gBAAeC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,8BACH7C,IACC8C,EAAAA,EAAAA,MAAA,OAAKF,UAAU,gBAAeC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,+BACbD,EAAAA,EAAAA,KAAA,QAAAE,SAAO7C,QAGX2C,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iBAAgBC,SAC5B,CAAC,EAAG,EAAG,GAAGE,KAAKC,IACdF,EAAAA,EAAAA,MAAA,OAEEF,UAAW,QAAQ9D,IAASkE,EAAU,SAAW,MAAMlE,EAAOkE,EAAU,YAAc,KAAKH,SAAA,EAE3FF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAaC,SAAEG,KAC9BL,EAAAA,EAAAA,KAAA,OAAKC,UAAU,aAAYC,SACZ,IAAZG,EAAgB,gBAA8B,IAAZA,EAAgB,gBAAkB,aALlEA,WAYbF,EAAAA,EAAAA,MAAA,QAAMG,SA5GSC,UAEnB,GADArC,EAAEsC,iBACGlB,IAAL,CAEA9B,GAAgB,GAChBF,EAAS,IAET,IAEE,MAAMmD,EAAQC,KAAKC,MAAMC,aAAaC,QAAQ,UAAY,MAI1D,IAHqBJ,EAAMK,MAAKC,GAAKA,EAAEvE,MAAMwE,gBAAkB1E,EAASE,MAAMwE,gBAG3D,CACjB,MAAMC,EAAW,CACfjF,KAAMM,EAASN,KACfQ,MAAOF,EAASE,MAChBE,SAAUJ,EAASI,SACnBD,MAAOH,EAASG,MAChBG,SAAUN,EAASM,SACnBsE,mBAAmB,EACnBC,KAAM,oBAGFC,QAAqBzD,EAASsD,GACpC,IAAKG,EAAaC,QAChB,MAAM,IAAIC,MAAMF,EAAaG,SAAW,0BAE5C,CAGA,MAAMC,EAAcd,KAAKC,MAAMC,aAAaC,QAAQ,gBACpD,IAAKW,EACH,MAAM,IAAIF,MAAM,sDAGlB,MAAMG,EAASD,EAAYzF,GAGrB2F,EAAW5F,EAAkBgF,MAAKa,GAAOA,EAAI5F,KAAO6F,SAAStF,EAASQ,mBAEtE+E,EAAe,CACnBhF,aAAcP,EAASO,aAAa0C,OACpC/C,MAAOF,EAASE,MAAMwE,cAAczB,OACpC9C,MAAOH,EAASG,MAAM8C,OACtB3C,SAAUN,EAASM,UAAYN,EAASY,KACxCD,QAASX,EAASW,QAAQsC,OAC1BrC,KAAMZ,EAASY,KAAKqC,OACpBvC,YAAaV,EAASU,aAAe,aAAoB,OAAR0E,QAAQ,IAARA,OAAQ,EAARA,EAAU1F,OAAQ,aACnEc,gBAAiBR,EAASQ,gBAC1BgF,cAAsB,OAARJ,QAAQ,IAARA,OAAQ,EAARA,EAAU1F,OAAQ,QAChCe,kBAAmBT,EAASS,mBAAqB,IACjD0E,OAAQA,EACRtE,eAAgBb,EAASc,cAAgB,KACzCpB,KAAMM,EAASO,aAAa0C,OAC5BwC,WAAW,IAAIC,MAAOC,eAGxBhD,QAAQiD,IAAI,4BAA6BL,GAGzC,MAAM9C,QAAenB,EAAwBiE,EAAcJ,GAE3D,IAAI1C,EAAOsC,QAIT,MAAM,IAAIC,MAAMvC,EAAOwC,SAAW,uCAHlCY,MAAM,iEACN1E,EAAS,sBAKb,CAAE,MAAOuB,GACPC,QAAQ5B,MAAM,sBAAuB,CACnCA,MAAO2B,EACPuC,QAASvC,EAAIuC,QACba,MAAOpD,EAAIoD,QAEb9E,EAAS0B,EAAIuC,SAAW,mEAC1B,CAAC,QACC/D,GAAgB,EAClB,CA7E2B,CA6E3B,EA6BkCyC,UAAU,cAAaC,SAAA,CACzC,IAAT/D,IACCgE,EAAAA,EAAAA,MAAA,OAAKF,UAAU,YAAWC,SAAA,EACxBF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,0BACJC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,aAAYC,SAAA,EACzBF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,iBACPF,EAAAA,EAAAA,KAAA,SACE1B,KAAK,OACLtC,KAAK,OACLqD,MAAO/C,EAASN,KAChBqG,SAAUjD,EACVkD,YAAY,uBACZC,UAAQ,QAGZpC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,aAAYC,SAAA,EACzBF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,aACPF,EAAAA,EAAAA,KAAA,SACE1B,KAAK,QACLtC,KAAK,QACLqD,MAAO/C,EAASE,MAChB6F,SAAUjD,EACVkD,YAAY,mBACZC,UAAQ,QAGZpC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,aAAYC,SAAA,EACzBF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,oBACPF,EAAAA,EAAAA,KAAA,SACE1B,KAAK,MACLtC,KAAK,QACLqD,MAAO/C,EAASG,MAChB4F,SAAUjD,EACVkD,YAAY,0BACZC,UAAQ,QAGZpC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,aAAYC,SAAA,EACzBF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,cACPF,EAAAA,EAAAA,KAAA,SACE1B,KAAK,OACLtC,KAAK,WACLqD,MAAO/C,EAASM,SAChByF,SAAUjD,EACVkD,YAAY,4CAGhBnC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,aAAYC,SAAA,EACzBF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,uBACPF,EAAAA,EAAAA,KAAA,SACE1B,KAAK,WACLtC,KAAK,WACLqD,MAAO/C,EAASI,SAChB2F,SAAUjD,EACVkD,YAAY,uCACZC,UAAQ,QAGZpC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,aAAYC,SAAA,EACzBF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,wBACPF,EAAAA,EAAAA,KAAA,SACE1B,KAAK,WACLtC,KAAK,kBACLqD,MAAO/C,EAASK,gBAChB0F,SAAUjD,EACVkD,YAAY,wBACZC,UAAQ,QAGZvC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAcC,UAC3BF,EAAAA,EAAAA,KAAA,UAAQ1B,KAAK,SAAS2B,UAAU,WAAWuC,QAAS9C,EAASQ,SAAC,gCAO1D,IAAT/D,IACCgE,EAAAA,EAAAA,MAAA,OAAKF,UAAU,YAAWC,SAAA,EACxBF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,0BACJC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,aAAYC,SAAA,EACzBF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,qBACPF,EAAAA,EAAAA,KAAA,SACE1B,KAAK,OACLtC,KAAK,eACLqD,MAAO/C,EAASO,aAChBwF,SAAUjD,EACVkD,YAAY,qBACZC,UAAQ,QAGZpC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,aAAYC,SAAA,EACzBF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,wBACPC,EAAAA,EAAAA,MAAA,UACEnE,KAAK,kBACLqD,MAAO/C,EAASQ,gBAChBuF,SAAUjD,EACVa,UAAU,eACVsC,UAAQ,EAAArC,SAAA,EAERF,EAAAA,EAAAA,KAAA,UAAQX,MAAM,GAAEa,SAAC,sBAChBpE,EAAkBsE,KAAIsB,IACrB1B,EAAAA,EAAAA,KAAA,UAA0BX,MAAOqC,EAAS3F,GAAGmE,SAC1CwB,EAAS1F,MADC0F,EAAS3F,aAM5BoE,EAAAA,EAAAA,MAAA,OAAKF,UAAU,aAAYC,SAAA,EACzBF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,wBACPF,EAAAA,EAAAA,KAAA,SACE1B,KAAK,OACLtC,KAAK,UACLqD,MAAO/C,EAASW,QAChBoF,SAAUjD,EACVkD,YAAY,iBACZC,UAAQ,QAGZpC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,aAAYC,SAAA,EACzBF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,YACPF,EAAAA,EAAAA,KAAA,SACE1B,KAAK,OACLtC,KAAK,OACLqD,MAAO/C,EAASY,KAChBmF,SAAUjD,EACVkD,YAAY,OACZC,UAAQ,QAGZpC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,aAAYC,SAAA,EACzBF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,yBACPF,EAAAA,EAAAA,KAAA,SACE1B,KAAK,SACLtC,KAAK,oBACLqD,MAAO/C,EAASS,kBAChBsF,SAAUjD,EACVkD,YAAY,sBACZG,IAAI,IACJC,IAAI,WAGRvC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,aAAYC,SAAA,EACzBF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,0BACPF,EAAAA,EAAAA,KAAA,YACEhE,KAAK,cACLqD,MAAO/C,EAASU,YAChBqF,SAAUjD,EACVkD,YAAY,8BACZK,KAAK,UAGTxC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,aAAYC,SAAA,EACzBF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,uBACPC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,eAAcC,SAAA,EAC3BF,EAAAA,EAAAA,KAAA,SACE1B,KAAK,OACLvC,GAAG,iBACHC,KAAK,iBACL4G,OAAO,UACPP,SAAUpE,EACVgC,UAAU,aACVsC,UAAQ,KAEVvC,EAAAA,EAAAA,KAAA,SAAO6C,QAAQ,iBAAiB5C,UAAU,aAAYC,SACnD5D,EAASc,cACR4C,EAAAA,EAAAA,KAAA,OAAK8C,IAAKxG,EAASc,aAAc2F,IAAI,UAAU9C,UAAU,mBAEzDE,EAAAA,EAAAA,MAAA,OAAKF,UAAU,qBAAoBC,SAAA,EACjCF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,mBACbD,EAAAA,EAAAA,KAAA,QAAAE,SAAM,uCAMhBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,eAAcC,SAAA,EAC3BF,EAAAA,EAAAA,KAAA,UAAQ1B,KAAK,SAAS2B,UAAU,WAAWuC,QAASzC,EAASG,SAAC,UAG9DF,EAAAA,EAAAA,KAAA,UAAQ1B,KAAK,SAAS2B,UAAU,WAAWuC,QAAS9C,EAASQ,SAAC,gCAO1D,IAAT/D,IACCgE,EAAAA,EAAAA,MAAA,OAAKF,UAAU,YAAWC,SAAA,EACxBF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,6BACJC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,iBAAgBC,SAAA,EAC7BF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,0BACJC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,cAAaC,SAAA,EAC1BF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,eAAcC,SAAC,WAC/BF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,eAAcC,SAAE5D,EAASN,WAE3CmE,EAAAA,EAAAA,MAAA,OAAKF,UAAU,cAAaC,SAAA,EAC1BF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,eAAcC,SAAC,YAC/BF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,eAAcC,SAAE5D,EAASE,YAE3C2D,EAAAA,EAAAA,MAAA,OAAKF,UAAU,cAAaC,SAAA,EAC1BF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,eAAcC,SAAC,YAC/BF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,eAAcC,SAAE5D,EAASG,YAE3C0D,EAAAA,EAAAA,MAAA,OAAKF,UAAU,cAAaC,SAAA,EAC1BF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,eAAcC,SAAC,eAC/BF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,eAAcC,SAAE5D,EAASM,UAAY,sBAGvDoD,EAAAA,EAAAA,KAAA,MAAAE,SAAI,0BACJC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,cAAaC,SAAA,EAC1BF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,eAAcC,SAAC,oBAC/BF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,eAAcC,SAAE5D,EAASO,mBAE3CsD,EAAAA,EAAAA,MAAA,OAAKF,UAAU,cAAaC,SAAA,EAC1BF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,eAAcC,SAAC,uBAC/BF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,eAAcC,UACiD,QAA5EhE,EAAAJ,EAAkBgF,MAAKa,GAAOA,EAAI5F,KAAO6F,SAAStF,EAASQ,0BAAiB,IAAAZ,OAAA,EAA5EA,EAA8EF,OAAQ,sBAG3FmE,EAAAA,EAAAA,MAAA,OAAKF,UAAU,cAAaC,SAAA,EAC1BF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,eAAcC,SAAC,cAC/BC,EAAAA,EAAAA,MAAA,QAAMF,UAAU,eAAcC,SAAA,CAAE5D,EAASW,QAAQ,KAAGX,EAASY,YAE/DiD,EAAAA,EAAAA,MAAA,OAAKF,UAAU,cAAaC,SAAA,EAC1BF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,eAAcC,SAAC,0BAC/BF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,eAAcC,SAAE5D,EAASS,mBAAqB,UAEhEoD,EAAAA,EAAAA,MAAA,OAAKF,UAAU,cAAaC,SAAA,EAC1BF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,eAAcC,SAAC,kBAC/BF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,eAAcC,SAAE5D,EAASU,aAAe,mCAI5DmD,EAAAA,EAAAA,MAAA,OAAKF,UAAU,eAAcC,SAAA,EAC3BF,EAAAA,EAAAA,KAAA,UAAQ1B,KAAK,SAAS2B,UAAU,WAAWuC,QAASzC,EAASG,SAAC,UAG9DF,EAAAA,EAAAA,KAAA,UAAQ1B,KAAK,SAAS2B,UAAU,aAAa+C,SAAUzF,EAAa2C,SACjE3C,EAAe,gBAAkB,oCAO1C,C","sources":["pages/ServiceProviderSignup.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { AuthContext } from '../context/AuthContext';\nimport './ServiceProviderSignup.css';\n\nconst serviceCategories = [\n  { id: 1, name: 'Plumbing' },\n  { id: 2, name: 'Electrical' },\n  { id: 3, name: 'Food Catering' },\n  { id: 4, name: 'Home Painting' },\n  { id: 5, name: 'Transport Services' },\n  { id: 6, name: 'Home Cleaning' },\n  { id: 7, name: 'Gardening & Lawn' },\n  { id: 8, name: 'Home Repair' },\n  { id: 9, name: 'Locksmith Services' },\n  { id: 10, name: 'Moving & Storage' },\n  { id: 11, name: 'Food Delivery' },\n  { id: 12, name: 'Pest Control' },\n  { id: 13, name: 'Personal Training' },\n  { id: 14, name: 'Other' }\n];\n\nconst ServiceProviderSignup = () => {\n  const [step, setStep] = useState(1);\n  const [formData, setFormData] = useState({\n    // User details\n    name: '',\n    email: '',\n    phone: '',\n    password: '',\n    confirmPassword: '',\n    location: '',\n    \n    // Business details\n    businessName: '',\n    serviceCategory: '',\n    yearsOfExperience: '',\n    description: '',\n    address: '',\n    city: '',\n    \n    // Image\n    profilePicture: null,\n    imagePreview: ''\n  });\n  \n  const [error, setError] = useState('');\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const navigate = useNavigate();\n  const { register, registerServiceProvider, user, setUser } = useContext(AuthContext);\n\n  const handleImageChange = (e) => {\n    try {\n      const file = e.target.files[0];\n      if (!file) return;\n\n      // Clear any previous errors\n      setError('');\n\n      // Validate file type\n      if (!file.type.match('image.*')) {\n        setError('Please select a valid image file (JPEG, PNG, etc.)');\n        return;\n      }\n\n      // Validate file size (max 5MB)\n      if (file.size > 5 * 1024 * 1024) {\n        setError('Image size should be less than 5MB');\n        return;\n      }\n\n      const reader = new FileReader();\n      \n      // Store a reference to setFormData that will be available in the callback\n      const updateFormData = setFormData;\n      \n      reader.onload = (event) => {\n        try {\n          updateFormData(prev => ({\n            ...prev,\n            profilePicture: file,\n            imagePreview: event.target.result\n          }));\n        } catch (err) {\n          console.error('Error updating form data:', err);\n          setError('Failed to process the image');\n        }\n      };\n      \n      reader.onerror = () => {\n        setError('Failed to read the image file');\n      };\n      \n      reader.readAsDataURL(file);\n    } catch (err) {\n      console.error('Error in handleImageChange:', err);\n      setError('An error occurred while processing the image');\n    }\n  };\n\n  const handleChange = (e) => {\n    const { name, value, type, files } = e.target;\n    \n    if (type === 'file') {\n      handleImageChange(e);\n      return;\n    }\n    \n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  const validateStep = () => {\n    if (step === 1) {\n      // User details validation\n      if (!formData.name.trim()) {\n        setError('Full name is required');\n        return false;\n      }\n      if (!formData.email.trim()) {\n        setError('Email is required');\n        return false;\n      } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\n        setError('Please enter a valid email address');\n        return false;\n      }\n      if (!formData.phone.trim()) {\n        setError('Phone number is required');\n        return false;\n      }\n      if (!formData.password) {\n        setError('Password is required');\n        return false;\n      }\n      if (formData.password.length < 6) {\n        setError('Password must be at least 6 characters long');\n        return false;\n      }\n      if (formData.password !== formData.confirmPassword) {\n        setError('Passwords do not match');\n        return false;\n      }\n      return true;\n      \n    } else if (step === 2) {\n      // Business details validation\n      if (!formData.businessName.trim()) {\n        setError('Business name is required');\n        return false;\n      }\n      if (!formData.serviceCategory) {\n        setError('Please select a service category');\n        return false;\n      }\n      if (!formData.address.trim()) {\n        setError('Business address is required');\n        return false;\n      }\n      if (!formData.city.trim()) {\n        setError('City is required');\n        return false;\n      }\n      if (!formData.profilePicture) {\n        setError('Please upload a profile picture');\n        return false;\n      }\n      return true;\n    }\n    setError('');\n    return true;\n  };\n\n  const nextStep = () => {\n    if (validateStep()) {\n      setStep(step + 1);\n      setError('');\n      window.scrollTo({ top: 0, behavior: 'smooth' });\n    }\n  };\n\n  const prevStep = () => {\n    setStep(step - 1);\n    setError('');\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!validateStep()) return;\n    \n    setIsSubmitting(true);\n    setError('');\n    \n    try {\n      // First, check if we need to register a new user\n      const users = JSON.parse(localStorage.getItem('users') || '[]');\n      const existingUser = users.find(u => u.email.toLowerCase() === formData.email.toLowerCase());\n      \n      // If user doesn't exist, register them first\n      if (!existingUser) {\n        const userData = {\n          name: formData.name,\n          email: formData.email,\n          password: formData.password,\n          phone: formData.phone,\n          location: formData.location,\n          isServiceProvider: true,\n          role: 'service_provider'\n        };\n        \n        const userResponse = await register(userData);\n        if (!userResponse.success) {\n          throw new Error(userResponse.message || 'Failed to register user');\n        }\n      }\n      \n      // At this point, the user is registered and logged in\n      const currentUser = JSON.parse(localStorage.getItem('currentUser'));\n      if (!currentUser) {\n        throw new Error('Failed to complete registration. Please try again.');\n      }\n      \n      const userId = currentUser.id;\n      \n      // Create provider data with all required fields\n      const category = serviceCategories.find(cat => cat.id === parseInt(formData.serviceCategory));\n      \n      const providerData = {\n        businessName: formData.businessName.trim(),\n        email: formData.email.toLowerCase().trim(),\n        phone: formData.phone.trim(),\n        location: formData.location || formData.city,\n        address: formData.address.trim(),\n        city: formData.city.trim(),\n        description: formData.description || `Offering ${category?.name || 'services'}`,\n        serviceCategory: formData.serviceCategory,\n        categoryName: category?.name || 'Other',\n        yearsOfExperience: formData.yearsOfExperience || '0',\n        userId: userId,\n        profilePicture: formData.imagePreview || null,\n        name: formData.businessName.trim(), // Some systems might expect 'name' instead of 'businessName'\n        createdAt: new Date().toISOString()\n      };\n      \n      console.log('Submitting provider data:', providerData);\n      \n      // Register the service provider\n      const result = await registerServiceProvider(providerData, userId);\n      \n      if (result.success) {\n        alert('Registration successful! Your business profile is now active.');\n        navigate('/business-dashboard');\n      } else {\n        throw new Error(result.message || 'Failed to register service provider');\n      }\n      \n    } catch (err) {\n      console.error('Registration error:', {\n        error: err,\n        message: err.message,\n        stack: err.stack\n      });\n      setError(err.message || 'Failed to register. Please check your information and try again.');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  return (\n    <div className=\"service-provider-signup\">\n      <div className=\"signup-container\">\n        <div className=\"signup-header\">\n          <h1>Become a Service Provider</h1>\n          {error && (\n            <div className=\"error-message\">\n              <i className=\"fas fa-exclamation-circle\"></i>\n              <span>{error}</span>\n            </div>\n          )}\n          <div className=\"progress-steps\">\n            {[1, 2, 3].map((stepNum) => (\n              <div \n                key={stepNum} \n                className={`step ${step === stepNum ? 'active' : ''} ${step > stepNum ? 'completed' : ''}`}\n              >\n                <div className=\"step-number\">{stepNum}</div>\n                <div className=\"step-label\">\n                  {stepNum === 1 ? 'Personal Info' : stepNum === 2 ? 'Business Info' : 'Review'}\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n        \n        <form onSubmit={handleSubmit} className=\"signup-form\">\n          {step === 1 && (\n            <div className=\"form-step\">\n              <h2>Personal Information</h2>\n              <div className=\"form-group\">\n                <label>Full Name *</label>\n                <input\n                  type=\"text\"\n                  name=\"name\"\n                  value={formData.name}\n                  onChange={handleChange}\n                  placeholder=\"Enter your full name\"\n                  required\n                />\n              </div>\n              <div className=\"form-group\">\n                <label>Email *</label>\n                <input\n                  type=\"email\"\n                  name=\"email\"\n                  value={formData.email}\n                  onChange={handleChange}\n                  placeholder=\"Enter your email\"\n                  required\n                />\n              </div>\n              <div className=\"form-group\">\n                <label>Phone Number *</label>\n                <input\n                  type=\"tel\"\n                  name=\"phone\"\n                  value={formData.phone}\n                  onChange={handleChange}\n                  placeholder=\"Enter your phone number\"\n                  required\n                />\n              </div>\n              <div className=\"form-group\">\n                <label>Location</label>\n                <input\n                  type=\"text\"\n                  name=\"location\"\n                  value={formData.location}\n                  onChange={handleChange}\n                  placeholder=\"Your location (e.g., City, Country)\"\n                />\n              </div>\n              <div className=\"form-group\">\n                <label>Create Password *</label>\n                <input\n                  type=\"password\"\n                  name=\"password\"\n                  value={formData.password}\n                  onChange={handleChange}\n                  placeholder=\"Create a password (min 6 characters)\"\n                  required\n                />\n              </div>\n              <div className=\"form-group\">\n                <label>Confirm Password *</label>\n                <input\n                  type=\"password\"\n                  name=\"confirmPassword\"\n                  value={formData.confirmPassword}\n                  onChange={handleChange}\n                  placeholder=\"Confirm your password\"\n                  required\n                />\n              </div>\n              <div className=\"form-actions\">\n                <button type=\"button\" className=\"btn-next\" onClick={nextStep}>\n                  Next: Business Details\n                </button>\n              </div>\n            </div>\n          )}\n          \n          {step === 2 && (\n            <div className=\"form-step\">\n              <h2>Business Information</h2>\n              <div className=\"form-group\">\n                <label>Business Name *</label>\n                <input\n                  type=\"text\"\n                  name=\"businessName\"\n                  value={formData.businessName}\n                  onChange={handleChange}\n                  placeholder=\"Your business name\"\n                  required\n                />\n              </div>\n              <div className=\"form-group\">\n                <label>Service Category *</label>\n                <select\n                  name=\"serviceCategory\"\n                  value={formData.serviceCategory}\n                  onChange={handleChange}\n                  className=\"form-control\"\n                  required\n                >\n                  <option value=\"\">Select a category</option>\n                  {serviceCategories.map(category => (\n                    <option key={category.id} value={category.id}>\n                      {category.name}\n                    </option>\n                  ))}\n                </select>\n              </div>\n              <div className=\"form-group\">\n                <label>Business Address *</label>\n                <input\n                  type=\"text\"\n                  name=\"address\"\n                  value={formData.address}\n                  onChange={handleChange}\n                  placeholder=\"Street address\"\n                  required\n                />\n              </div>\n              <div className=\"form-group\">\n                <label>City *</label>\n                <input\n                  type=\"text\"\n                  name=\"city\"\n                  value={formData.city}\n                  onChange={handleChange}\n                  placeholder=\"City\"\n                  required\n                />\n              </div>\n              <div className=\"form-group\">\n                <label>Years of Experience</label>\n                <input\n                  type=\"number\"\n                  name=\"yearsOfExperience\"\n                  value={formData.yearsOfExperience}\n                  onChange={handleChange}\n                  placeholder=\"Years of experience\"\n                  min=\"0\"\n                  max=\"50\"\n                />\n              </div>\n              <div className=\"form-group\">\n                <label>Business Description</label>\n                <textarea\n                  name=\"description\"\n                  value={formData.description}\n                  onChange={handleChange}\n                  placeholder=\"Tell us about your business\"\n                  rows=\"4\"\n                ></textarea>\n              </div>\n              <div className=\"form-group\">\n                <label>Profile Picture *</label>\n                <div className=\"image-upload\">\n                  <input\n                    type=\"file\"\n                    id=\"profilePicture\"\n                    name=\"profilePicture\"\n                    accept=\"image/*\"\n                    onChange={handleImageChange}\n                    className=\"file-input\"\n                    required\n                  />\n                  <label htmlFor=\"profilePicture\" className=\"file-label\">\n                    {formData.imagePreview ? (\n                      <img src={formData.imagePreview} alt=\"Preview\" className=\"image-preview\" />\n                    ) : (\n                      <div className=\"upload-placeholder\">\n                        <i className=\"fas fa-camera\"></i>\n                        <span>Upload Profile Picture</span>\n                      </div>\n                    )}\n                  </label>\n                </div>\n              </div>\n              <div className=\"form-actions\">\n                <button type=\"button\" className=\"btn-prev\" onClick={prevStep}>\n                  Back\n                </button>\n                <button type=\"button\" className=\"btn-next\" onClick={nextStep}>\n                  Next: Review & Submit\n                </button>\n              </div>\n            </div>\n          )}\n          \n          {step === 3 && (\n            <div className=\"form-step\">\n              <h2>Review Your Information</h2>\n              <div className=\"review-section\">\n                <h3>Personal Information</h3>\n                <div className=\"review-item\">\n                  <span className=\"review-label\">Name:</span>\n                  <span className=\"review-value\">{formData.name}</span>\n                </div>\n                <div className=\"review-item\">\n                  <span className=\"review-label\">Email:</span>\n                  <span className=\"review-value\">{formData.email}</span>\n                </div>\n                <div className=\"review-item\">\n                  <span className=\"review-label\">Phone:</span>\n                  <span className=\"review-value\">{formData.phone}</span>\n                </div>\n                <div className=\"review-item\">\n                  <span className=\"review-label\">Location:</span>\n                  <span className=\"review-value\">{formData.location || 'Not specified'}</span>\n                </div>\n                \n                <h3>Business Information</h3>\n                <div className=\"review-item\">\n                  <span className=\"review-label\">Business Name:</span>\n                  <span className=\"review-value\">{formData.businessName}</span>\n                </div>\n                <div className=\"review-item\">\n                  <span className=\"review-label\">Service Category:</span>\n                  <span className=\"review-value\">\n                    {serviceCategories.find(cat => cat.id === parseInt(formData.serviceCategory))?.name || 'Not specified'}\n                  </span>\n                </div>\n                <div className=\"review-item\">\n                  <span className=\"review-label\">Address:</span>\n                  <span className=\"review-value\">{formData.address}, {formData.city}</span>\n                </div>\n                <div className=\"review-item\">\n                  <span className=\"review-label\">Years of Experience:</span>\n                  <span className=\"review-value\">{formData.yearsOfExperience || '0'}</span>\n                </div>\n                <div className=\"review-item\">\n                  <span className=\"review-label\">Description:</span>\n                  <span className=\"review-value\">{formData.description || 'No description provided'}</span>\n                </div>\n              </div>\n              \n              <div className=\"form-actions\">\n                <button type=\"button\" className=\"btn-prev\" onClick={prevStep}>\n                  Back\n                </button>\n                <button type=\"submit\" className=\"btn-submit\" disabled={isSubmitting}>\n                  {isSubmitting ? 'Submitting...' : 'Submit Application'}\n                </button>\n              </div>\n            </div>\n          )}\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default ServiceProviderSignup;\n"],"names":["serviceCategories","id","name","ServiceProviderSignup","_serviceCategories$fi","step","setStep","useState","formData","setFormData","email","phone","password","confirmPassword","location","businessName","serviceCategory","yearsOfExperience","description","address","city","profilePicture","imagePreview","error","setError","isSubmitting","setIsSubmitting","navigate","useNavigate","register","registerServiceProvider","user","setUser","useContext","AuthContext","handleImageChange","e","file","target","files","type","match","size","reader","FileReader","updateFormData","onload","event","prev","result","err","console","onerror","readAsDataURL","handleChange","value","validateStep","trim","test","length","nextStep","window","scrollTo","top","behavior","prevStep","_jsx","className","children","_jsxs","map","stepNum","onSubmit","async","preventDefault","users","JSON","parse","localStorage","getItem","find","u","toLowerCase","userData","isServiceProvider","role","userResponse","success","Error","message","currentUser","userId","category","cat","parseInt","providerData","categoryName","createdAt","Date","toISOString","log","alert","stack","onChange","placeholder","required","onClick","min","max","rows","accept","htmlFor","src","alt","disabled"],"sourceRoot":""}