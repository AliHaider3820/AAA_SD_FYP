{"version":3,"file":"static/js/736.b37c8eca.chunk.js","mappings":"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","sources":["pages/BusinessProfileEdit.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { FaArrowLeft, FaSave, FaCamera, FaTimes } from 'react-icons/fa';\nimport { AuthContext } from '../context/AuthContext';\nimport './BusinessProfileEdit.css';\n\nconst BusinessProfileEdit = () => {\n  const { businessId } = useParams();\n  const navigate = useNavigate();\n  const { user } = useContext(AuthContext);\n  \n  const [formData, setFormData] = useState({\n    businessName: '',\n    categoryName: '',\n    description: '',\n    phone: '',\n    email: '',\n    address: '',\n    city: '',\n    yearsOfExperience: '',\n    profilePicture: null,\n    previewImage: ''\n  });\n  \n  const [categories, setCategories] = useState([\n    'Plumbing', 'Electrical', 'Cleaning', 'Moving', 'Painting', \n    'Handyman', 'Landscaping', 'Pest Control', 'Other'\n  ]);\n  \n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n\n  // Load business data\n  useEffect(() => {\n    const loadBusinessProfile = () => {\n      try {\n        const providers = JSON.parse(localStorage.getItem('serviceProviders') || '[]');\n        const business = providers.find(p => p.id === businessId);\n        \n        if (!business) {\n          setError('Business not found');\n          setLoading(false);\n          return;\n        }\n        \n        // Check if current user is the owner\n        if (business.userId !== user?.id) {\n          setError('You are not authorized to edit this profile');\n          setLoading(false);\n          return;\n        }\n        \n        setFormData({\n          businessName: business.businessName || '',\n          categoryName: business.categoryName || '',\n          description: business.description || '',\n          phone: business.phone || '',\n          email: business.email || '',\n          address: business.address || '',\n          city: business.city || '',\n          yearsOfExperience: business.yearsOfExperience || '',\n          profilePicture: null,\n          previewImage: business.profilePicture || ''\n        });\n        \n        setLoading(false);\n      } catch (err) {\n        console.error('Error loading business profile:', err);\n        setError('Failed to load business profile');\n        setLoading(false);\n      }\n    };\n    \n    loadBusinessProfile();\n  }, [businessId, user?.id]);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  const handleImageChange = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setFormData(prev => ({\n          ...prev,\n          profilePicture: file,\n          previewImage: reader.result\n        }));\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  const removeImage = () => {\n    setFormData(prev => ({\n      ...prev,\n      profilePicture: null,\n      previewImage: ''\n    }));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setError('');\n    setSuccess('');\n    \n    try {\n      // Basic validation\n      if (!formData.businessName.trim()) {\n        setError('Business name is required');\n        return;\n      }\n      \n      if (!formData.categoryName) {\n        setError('Please select a category');\n        return;\n      }\n      \n      // Update business in localStorage\n      const providers = JSON.parse(localStorage.getItem('serviceProviders') || '[]');\n      const updatedProviders = providers.map(provider => {\n        if (provider.id === businessId && provider.userId === user?.id) {\n          return {\n            ...provider,\n            businessName: formData.businessName,\n            categoryName: formData.categoryName,\n            description: formData.description,\n            phone: formData.phone,\n            email: formData.email,\n            address: formData.address,\n            city: formData.city,\n            yearsOfExperience: formData.yearsOfExperience,\n            profilePicture: formData.previewImage || provider.profilePicture,\n            updatedAt: new Date().toISOString()\n          };\n        }\n        return provider;\n      });\n      \n      localStorage.setItem('serviceProviders', JSON.stringify(updatedProviders));\n      setSuccess('Profile updated successfully!');\n      \n      // Redirect back to profile after a short delay\n      setTimeout(() => {\n        navigate(`/business-profile/${businessId}`);\n      }, 1500);\n      \n    } catch (err) {\n      console.error('Error updating business profile:', err);\n      setError('Failed to update profile. Please try again.');\n    }\n  };\n\n  if (loading) {\n    return <div className=\"loading-container\">Loading...</div>;\n  }\n\n  if (error) {\n    return (\n      <div className=\"error-container\">\n        <h2>{error}</h2>\n        <button \n          className=\"btn-primary\" \n          onClick={() => navigate(-1)}\n        >\n          Go Back\n        </button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"business-profile-edit\">\n      <div className=\"edit-header\">\n        <button \n          className=\"back-button\"\n          onClick={() => navigate(-1)}\n        >\n          <FaArrowLeft /> Back to Profile\n        </button>\n        <h1>Edit Business Profile</h1>\n      </div>\n      \n      <form onSubmit={handleSubmit} className=\"edit-form\">\n        <div className=\"form-section\">\n          <h2>Business Information</h2>\n          \n          <div className=\"form-group\">\n            <label htmlFor=\"businessName\">Business Name *</label>\n            <input\n              type=\"text\"\n              id=\"businessName\"\n              name=\"businessName\"\n              value={formData.businessName}\n              onChange={handleChange}\n              placeholder=\"Enter business name\"\n              required\n            />\n          </div>\n          \n          <div className=\"form-group\">\n            <label htmlFor=\"categoryName\">Category *</label>\n            <select\n              id=\"categoryName\"\n              name=\"categoryName\"\n              value={formData.categoryName}\n              onChange={handleChange}\n              required\n            >\n              <option value=\"\">Select a category</option>\n              {categories.map((category, index) => (\n                <option key={index} value={category}>{category}</option>\n              ))}\n            </select>\n          </div>\n          \n          <div className=\"form-group\">\n            <label htmlFor=\"yearsOfExperience\">Years of Experience</label>\n            <input\n              type=\"number\"\n              id=\"yearsOfExperience\"\n              name=\"yearsOfExperience\"\n              min=\"0\"\n              max=\"50\"\n              value={formData.yearsOfExperience}\n              onChange={handleChange}\n              placeholder=\"e.g., 5\"\n            />\n          </div>\n          \n          <div className=\"form-group\">\n            <label>Business Logo/Image</label>\n            <div className=\"image-upload-container\">\n              <div className=\"image-preview\">\n                {formData.previewImage ? (\n                  <>\n                    <img \n                      src={formData.previewImage} \n                      alt=\"Business preview\" \n                      className=\"preview-image\"\n                    />\n                    <button \n                      type=\"button\" \n                      className=\"remove-image\"\n                      onClick={removeImage}\n                    >\n                      <FaTimes />\n                    </button>\n                  </>\n                ) : (\n                  <div className=\"upload-placeholder\">\n                    <FaCamera className=\"camera-icon\" />\n                    <span>Upload Image</span>\n                  </div>\n                )}\n                <input\n                  type=\"file\"\n                  id=\"profilePicture\"\n                  name=\"profilePicture\"\n                  accept=\"image/*\"\n                  onChange={handleImageChange}\n                  className=\"file-input\"\n                />\n              </div>\n              <p className=\"image-hint\">Recommended size: 500x500px, Max size: 2MB</p>\n            </div>\n          </div>\n          \n          <div className=\"form-group\">\n            <label htmlFor=\"description\">Business Description</label>\n            <textarea\n              id=\"description\"\n              name=\"description\"\n              value={formData.description}\n              onChange={handleChange}\n              placeholder=\"Tell us about your business...\"\n              rows=\"4\"\n            />\n          </div>\n        </div>\n        \n        <div className=\"form-section\">\n          <h2>Contact Information</h2>\n          \n          <div className=\"form-group\">\n            <label htmlFor=\"email\">Email Address *</label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              name=\"email\"\n              value={formData.email}\n              onChange={handleChange}\n              placeholder=\"your@email.com\"\n              required\n            />\n          </div>\n          \n          <div className=\"form-group\">\n            <label htmlFor=\"phone\">Phone Number</label>\n            <input\n              type=\"tel\"\n              id=\"phone\"\n              name=\"phone\"\n              value={formData.phone}\n              onChange={handleChange}\n              placeholder=\"+1 (123) 456-7890\"\n            />\n          </div>\n          \n          <div className=\"form-group\">\n            <label htmlFor=\"address\">Street Address</label>\n            <input\n              type=\"text\"\n              id=\"address\"\n              name=\"address\"\n              value={formData.address}\n              onChange={handleChange}\n              placeholder=\"123 Business St\"\n            />\n          </div>\n          \n          <div className=\"form-group\">\n            <label htmlFor=\"city\">City</label>\n            <input\n              type=\"text\"\n              id=\"city\"\n              name=\"city\"\n              value={formData.city}\n              onChange={handleChange}\n              placeholder=\"City\"\n            />\n          </div>\n        </div>\n        \n        {error && <div className=\"error-message\">{error}</div>}\n        {success && <div className=\"success-message\">{success}</div>}\n        \n        <div className=\"form-actions\">\n          <button \n            type=\"button\" \n            className=\"btn-secondary\"\n            onClick={() => navigate(-1)}\n          >\n            Cancel\n          </button>\n          <button \n            type=\"submit\" \n            className=\"btn-primary\"\n          >\n            <FaSave /> Save Changes\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default BusinessProfileEdit;\n"],"names":["BusinessProfileEdit","businessId","useParams","navigate","useNavigate","user","useContext","AuthContext","formData","setFormData","useState","businessName","categoryName","description","phone","email","address","city","yearsOfExperience","profilePicture","previewImage","categories","setCategories","loading","setLoading","error","setError","success","setSuccess","useEffect","loadBusinessProfile","business","JSON","parse","localStorage","getItem","find","p","id","userId","err","console","handleChange","e","name","value","target","prev","_jsx","className","children","_jsxs","onClick","FaArrowLeft","onSubmit","preventDefault","trim","updatedProviders","map","provider","updatedAt","Date","toISOString","setItem","stringify","setTimeout","htmlFor","type","onChange","placeholder","required","category","index","min","max","_Fragment","src","alt","removeImage","FaTimes","FaCamera","accept","file","files","reader","FileReader","onloadend","result","readAsDataURL","rows","FaSave"],"sourceRoot":""}