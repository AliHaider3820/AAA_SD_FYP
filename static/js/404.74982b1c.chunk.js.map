{"version":3,"file":"static/js/404.74982b1c.chunk.js","mappings":"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","sources":["pages/Profile.js"],"sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { AuthContext } from '../context/AuthContext';\nimport { FaUser, FaEnvelope, FaMapMarkerAlt, FaEdit, FaCamera, FaSave, FaTimes } from 'react-icons/fa';\nimport './Profile.css';\n\nconst Profile = () => {\n  const navigate = useNavigate();\n  const { user, setUser } = useContext(AuthContext);\n  const [profilePic, setProfilePic] = useState('');\n  const [isEditing, setIsEditing] = useState(false);\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    location: '',\n    about: ''\n  });\n  \n  // Initialize form data when user data is available\n  useEffect(() => {\n    const loadUserData = () => {\n      // First try to get from context\n      if (user) {\n        console.log('Loading user data from context:', user);\n        setFormData(prev => ({\n          ...prev,\n          name: user.name || user.username || `${user.firstName || ''} ${user.lastName || ''}`.trim() || '',\n          email: user.email || '',\n          location: user.location || '',\n          about: user.about || ''\n        }));\n        if (user.profilePicture) {\n          setProfilePic(user.profilePicture);\n        }\n        return;\n      }\n      \n      // Fallback to localStorage if context doesn't have user\n      const storedUser = JSON.parse(localStorage.getItem('currentUser') || '{}');\n      console.log('Loading user data from localStorage:', storedUser);\n      \n      if (storedUser && storedUser.email) {\n        setFormData(prev => ({\n          ...prev,\n          name: storedUser.name || storedUser.username || \n                `${storedUser.firstName || ''} ${storedUser.lastName || ''}`.trim() || '',\n          email: storedUser.email,\n          location: storedUser.location || '',\n          about: storedUser.about || ''\n        }));\n        if (storedUser.profilePicture) {\n          setProfilePic(storedUser.profilePicture);\n        }\n      }\n    };\n    \n    loadUserData();\n  }, [user]);\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  const handleSaveProfile = () => {\n    try {\n      // Get current user from context or localStorage\n      const currentUser = user || JSON.parse(localStorage.getItem('currentUser') || '{}');\n      \n      if (!currentUser || !currentUser.id) {\n        console.error('No user is currently logged in');\n        return;\n      }\n\n      // Prepare updated user data\n      const updatedUser = {\n        ...currentUser,\n        name: formData.name || currentUser.name,\n        email: formData.email || currentUser.email,\n        location: formData.location || currentUser.location,\n        about: formData.about || currentUser.about,\n        profilePicture: profilePic || currentUser.profilePicture\n      };\n\n      // Update context if setUser is available\n      if (setUser) {\n        setUser(updatedUser);\n      }\n\n      // Update localStorage\n      localStorage.setItem('currentUser', JSON.stringify(updatedUser));\n      \n      // If this is a service provider, update their data in the providers list\n      if (currentUser.isServiceProvider) {\n        const providers = JSON.parse(localStorage.getItem('providers') || '[]');\n        const updatedProviders = providers.map(p => \n          p.id === currentUser.id ? updatedUser : p\n        );\n        localStorage.setItem('providers', JSON.stringify(updatedProviders));\n      }\n      \n      setIsEditing(false);\n      \n    } catch (error) {\n      console.error('Error updating profile:', error);\n    }\n  };\n\n  const handleImageChange = (e) => {\n    const file = e.target.files[0];\n    if (!file) return;\n\n    const reader = new FileReader();\n    \n    reader.onloadend = () => {\n      try {\n        const newProfilePic = reader.result;\n        setProfilePic(newProfilePic);\n      } catch (error) {\n        console.error('Error updating profile picture:', error);\n      }\n    };\n    \n    reader.onerror = () => {\n      console.error('Failed to read the image file');\n    };\n    \n    reader.readAsDataURL(file);\n  };\n\n  // Check if we have user data in either context or localStorage\n  const currentUser = user || JSON.parse(localStorage.getItem('currentUser') || '{}');\n  \n  // Debug: Log the current user data to help diagnose the issue\n  console.log('Current User Data:', currentUser);\n  \n  if (!currentUser || !currentUser.email) {\n    return (\n      <div className=\"profile-container\">\n        <div className=\"profile-error\">\n          Please <a href=\"/login\" style={{ color: '#3498db', textDecoration: 'underline' }}>log in</a> to view your profile.\n        </div>\n      </div>\n    );\n  }\n  \n  // Get the best available name from user data\n  const getUserDisplayName = () => {\n    // Check all possible name fields in order of preference\n    if (currentUser.name) return currentUser.name;\n    if (currentUser.username) return currentUser.username;\n    if (currentUser.firstName || currentUser.lastName) {\n      return `${currentUser.firstName || ''} ${currentUser.lastName || ''}`.trim();\n    }\n    if (formData.name) return formData.name;\n    // If no name is found, use the email username part\n    const emailUsername = currentUser.email ? currentUser.email.split('@')[0] : '';\n    return emailUsername || 'User';\n  };\n  \n  const displayName = getUserDisplayName();\n\n  return (\n    <div className=\"profile-container\">\n      <div className=\"profile-header\">\n        <div className=\"profile-avatar\">\n          {profilePic ? (\n            <img \n              src={profilePic} \n              alt=\"Profile\" \n              className=\"avatar-img\"\n            />\n          ) : (\n            <FaUser className=\"avatar-icon\" />\n          )}\n          <label className=\"camera-icon\">\n            <FaCamera />\n            <input \n              type=\"file\" \n              accept=\"image/*\" \n              onChange={handleImageChange}\n              style={{ display: 'none' }}\n            />\n          </label>\n        </div>\n        \n        <div className=\"profile-info\">\n          {isEditing ? (\n            <div className=\"form-group\">\n              <input\n                type=\"text\"\n                name=\"name\"\n                value={formData.name}\n                onChange={handleInputChange}\n                className=\"form-input\"\n                placeholder=\"Your Name\"\n              />\n            </div>\n          ) : (\n            <div className=\"profile-name\">\n              <FaUser className=\"info-icon\" />\n              <h1>{displayName}</h1>\n            </div>\n          )}\n          \n          <p className=\"profile-email\">\n            <FaEnvelope className=\"info-icon\" /> {formData.email || 'No email provided'}\n          </p>\n          \n          {isEditing ? (\n            <div className=\"form-group\">\n              <input\n                type=\"text\"\n                name=\"location\"\n                value={formData.location}\n                onChange={handleInputChange}\n                className=\"form-input\"\n                placeholder=\"Your Location\"\n              />\n            </div>\n          ) : formData.location ? (\n            <p className=\"profile-location\">\n              <FaMapMarkerAlt className=\"info-icon\" /> {formData.location}\n            </p>\n          ) : null}\n        </div>\n        \n        <div className=\"profile-actions\">\n          {isEditing ? (\n            <>\n              <button \n                className=\"save-profile-btn\"\n                onClick={handleSaveProfile}\n              >\n                <FaSave /> Save\n              </button>\n              <button \n                className=\"cancel-edit-btn\"\n                onClick={() => setIsEditing(false)}\n              >\n                <FaTimes /> Cancel\n              </button>\n            </>\n          ) : (\n            <button \n              className=\"edit-profile-btn\"\n              onClick={() => setIsEditing(true)}\n            >\n              <FaEdit /> Edit Profile\n            </button>\n          )}\n        </div>\n      </div>\n\n      <div className=\"profile-content\">\n        <div className=\"profile-section\">\n          <h2>About Me</h2>\n          {isEditing ? (\n            <div className=\"form-group\">\n              <textarea\n                name=\"about\"\n                value={formData.about}\n                onChange={handleInputChange}\n                className=\"form-textarea\"\n                placeholder=\"Tell us about yourself...\"\n                rows=\"4\"\n              />\n            </div>\n          ) : (\n            <p>{formData.about || 'No information provided'}</p>\n          )}\n        </div>\n\n        <div className=\"profile-section\">\n          <h2>Contact Information</h2>\n          <div className=\"contact-info\">\n            <p><strong>Email:</strong> {formData.email}</p>\n            {formData.location && (\n              <p className=\"profile-location\">\n                <FaMapMarkerAlt className=\"info-icon\" /> {formData.location}\n              </p>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n"],"names":["Profile","useNavigate","user","setUser","useContext","AuthContext","profilePic","setProfilePic","useState","isEditing","setIsEditing","formData","setFormData","name","email","location","about","useEffect","loadUserData","console","log","prev","username","firstName","lastName","trim","profilePicture","storedUser","JSON","parse","localStorage","getItem","handleInputChange","e","value","target","currentUser","_jsx","className","children","_jsxs","href","style","color","textDecoration","displayName","getUserDisplayName","split","src","alt","FaUser","FaCamera","type","accept","onChange","file","files","reader","FileReader","onloadend","newProfilePic","result","error","onerror","readAsDataURL","display","placeholder","FaEnvelope","FaMapMarkerAlt","_Fragment","onClick","handleSaveProfile","id","updatedUser","setItem","stringify","isServiceProvider","updatedProviders","map","p","FaSave","FaTimes","FaEdit","rows"],"sourceRoot":""}