{"version":3,"file":"static/js/953.96fe7fb7.chunk.js","mappings":"oMA8EA,QAxEA,WACE,MAAOA,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,KAC5BC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,IAChCG,EAASC,IAAcJ,EAAAA,EAAAA,UAAS,IAqBvC,OApBiBK,EAAAA,EAAAA,OAqBfC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iBAAgBC,UAC7BC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,iCAAgCC,SAAA,EAC7CF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,qBACJF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,gFAEHC,EAAAA,EAAAA,MAAA,QAAMC,SAxBSC,UACnBC,EAAEC,iBACFX,GAAW,GACXE,EAAW,IAEX,UACyBU,EAAAA,EAAMC,KAAK,iDAAkD,CAAEjB,UACtFM,EAAW,oDACXY,EAAAA,GAAMC,QAAQ,4BAChB,CAAE,MAAOC,GAAQ,IAADC,EAAAC,EACd,MAAMC,GAAyB,QAAdF,EAAAD,EAAMI,gBAAQ,IAAAH,GAAM,QAANC,EAAdD,EAAgBI,YAAI,IAAAH,OAAN,EAAdA,EAAsBjB,UAAW,4BAClDC,EAAWiB,GACXL,EAAAA,GAAME,MAAMG,EACd,CAAC,QACCnB,GAAW,EACb,GASiCM,SAAA,EAC3BC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,aAAYC,SAAA,EACzBF,EAAAA,EAAAA,KAAA,SAAOkB,QAAQ,QAAOhB,SAAC,mBACvBF,EAAAA,EAAAA,KAAA,SACEmB,GAAG,QACHC,KAAK,QACLC,KAAK,QACLC,aAAa,QACbC,UAAQ,EACRtB,UAAU,aACVuB,YAAY,2BACZC,MAAOjC,EACPkC,SAAWpB,GAAMb,EAASa,EAAEqB,OAAOF,YAItC5B,IACCG,EAAAA,EAAAA,KAAA,OAAKC,UAAWJ,EAAQ+B,SAAS,QAAU,kBAAoB,gBAAgB1B,SAC5EL,KAILG,EAAAA,EAAAA,KAAA,UACEqB,KAAK,SACLQ,SAAUlC,EACVM,UAAU,cAAaC,SAEtBP,EAAU,aAAe,qBAG5BQ,EAAAA,EAAAA,MAAA,OAAKF,UAAU,cAAaC,SAAA,CAAC,0BACH,KACxBF,EAAAA,EAAAA,KAAC8B,EAAAA,GAAI,CAACC,GAAG,SAAS9B,UAAU,YAAWC,SAAC,4BAQpD,C","sources":["pages/ForgotPassword.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport './Auth.css';\n\nfunction ForgotPassword() {\n  const [email, setEmail] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState('');\n  const navigate = useNavigate();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setMessage('');\n    \n    try {\n      const response = await axios.post('http://localhost:5000/api/auth/forgot-password', { email });\n      setMessage('Password reset link has been sent to your email.');\n      toast.success('Password reset link sent!');\n    } catch (error) {\n      const errorMsg = error.response?.data?.message || 'Failed to send reset link';\n      setMessage(errorMsg);\n      toast.error(errorMsg);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"auth-container\">\n      <div className=\"auth-form forgot-password-form\">\n        <h2>Forgot Password</h2>\n        <p>Enter your email address and we'll send you a link to reset your password.</p>\n        \n        <form onSubmit={handleSubmit}>\n          <div className=\"form-group\">\n            <label htmlFor=\"email\">Email Address</label>\n            <input\n              id=\"email\"\n              name=\"email\"\n              type=\"email\"\n              autoComplete=\"email\"\n              required\n              className=\"form-input\"\n              placeholder=\"Enter your email address\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n          </div>\n\n          {message && (\n            <div className={message.includes('sent') ? 'success-message' : 'error-message'}>\n              {message}\n            </div>\n          )}\n\n          <button\n            type=\"submit\"\n            disabled={loading}\n            className=\"auth-button\"\n          >\n            {loading ? 'Sending...' : 'Send Reset Link'}\n          </button>\n\n          <div className=\"auth-footer\">\n            Remember your password?{' '}\n            <Link to=\"/login\" className=\"auth-link\">\n              Back to Login\n            </Link>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default ForgotPassword;\n"],"names":["email","setEmail","useState","loading","setLoading","message","setMessage","useNavigate","_jsx","className","children","_jsxs","onSubmit","async","e","preventDefault","axios","post","toast","success","error","_error$response","_error$response$data","errorMsg","response","data","htmlFor","id","name","type","autoComplete","required","placeholder","value","onChange","target","includes","disabled","Link","to"],"sourceRoot":""}